

================================================================
== Vivado HLS Report for 'fire2_fill_buffer'
================================================================
* Date:           Sat Apr 29 16:13:04 2017

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        fire_module
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.08|        0.63|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  115|  115|  115|  115|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  113|  113|         9|          7|          1|    16|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 7, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 11
* Pipeline: 1
  Pipeline-0: II = 7, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	11  / (exitcond2)
	3  / (!exitcond2)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	2  / true
11 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str196, [1 x i8]* @p_str197, [1 x i8]* @p_str198, [1 x i8]* @p_str199)

ST_1: empty_564 [1/1] 0.00ns
:1  %empty_564 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str201, [1 x i8]* @p_str202, [1 x i8]* @p_str203, [1 x i8]* @p_str204)

ST_1: empty_565 [1/1] 0.00ns
:2  %empty_565 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str206, [1 x i8]* @p_str207, [1 x i8]* @p_str208, [1 x i8]* @p_str209)

ST_1: empty_566 [1/1] 0.00ns
:3  %empty_566 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_3_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str211, [1 x i8]* @p_str212, [1 x i8]* @p_str213, [1 x i8]* @p_str214)

ST_1: empty_567 [1/1] 0.00ns
:4  %empty_567 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_4_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str216, [1 x i8]* @p_str217, [1 x i8]* @p_str218, [1 x i8]* @p_str219)

ST_1: empty_568 [1/1] 0.00ns
:5  %empty_568 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_5_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str221, [1 x i8]* @p_str222, [1 x i8]* @p_str223, [1 x i8]* @p_str224)

ST_1: empty_569 [1/1] 0.00ns
:6  %empty_569 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_6_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str226, [1 x i8]* @p_str227, [1 x i8]* @p_str228, [1 x i8]* @p_str229)

ST_1: empty_570 [1/1] 0.00ns
:7  %empty_570 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_7_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str231, [1 x i8]* @p_str232, [1 x i8]* @p_str233, [1 x i8]* @p_str234)

ST_1: empty_571 [1/1] 0.00ns
:8  %empty_571 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_8_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str236, [1 x i8]* @p_str237, [1 x i8]* @p_str238, [1 x i8]* @p_str239)

ST_1: empty_572 [1/1] 0.00ns
:9  %empty_572 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_9_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str241, [1 x i8]* @p_str242, [1 x i8]* @p_str243, [1 x i8]* @p_str244)

ST_1: empty_573 [1/1] 0.00ns
:10  %empty_573 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_10_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str246, [1 x i8]* @p_str247, [1 x i8]* @p_str248, [1 x i8]* @p_str249)

ST_1: empty_574 [1/1] 0.00ns
:11  %empty_574 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_11_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str251, [1 x i8]* @p_str252, [1 x i8]* @p_str253, [1 x i8]* @p_str254)

ST_1: empty_575 [1/1] 0.00ns
:12  %empty_575 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_12_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str256, [1 x i8]* @p_str257, [1 x i8]* @p_str258, [1 x i8]* @p_str259)

ST_1: empty_576 [1/1] 0.00ns
:13  %empty_576 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_13_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str261, [1 x i8]* @p_str262, [1 x i8]* @p_str263, [1 x i8]* @p_str264)

ST_1: empty_577 [1/1] 0.00ns
:14  %empty_577 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_14_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str266, [1 x i8]* @p_str267, [1 x i8]* @p_str268, [1 x i8]* @p_str269)

ST_1: empty_578 [1/1] 0.00ns
:15  %empty_578 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %matrix_e3x3_i_15_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str271, [1 x i8]* @p_str272, [1 x i8]* @p_str273, [1 x i8]* @p_str274)

ST_1: stg_28 [1/1] 1.57ns
:16  br label %1


 <State 2>: 4.08ns
ST_2: d [1/1] 0.00ns
:0  %d = phi i5 [ 0, %0 ], [ %d_1, %.preheader.preheader.031 ]

ST_2: exitcond2 [1/1] 1.91ns
:1  %exitcond2 = icmp eq i5 %d, -16

ST_2: d_1 [1/1] 1.72ns
:2  %d_1 = add i5 %d, 1

ST_2: stg_32 [1/1] 0.00ns
:3  br i1 %exitcond2, label %2, label %.preheader.preheader.0

ST_2: tmp [1/1] 0.00ns
.preheader.preheader.0:3  %tmp = zext i5 %d to i64

ST_2: tmp_67 [1/1] 1.37ns
.preheader.preheader.0:6  %tmp_67 = xor i5 %d, -16

ST_2: tmp_67_cast [1/1] 0.00ns
.preheader.preheader.0:7  %tmp_67_cast = zext i5 %tmp_67 to i64

ST_2: window_buffer_addr [1/1] 0.00ns
.preheader.preheader.0:8  %window_buffer_addr = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_67_cast

ST_2: tmp_74 [1/1] 0.00ns
.preheader.preheader.0:30  %tmp_74 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 5, i5 %d)

ST_2: window_buffer_addr_10 [1/1] 0.00ns
.preheader.preheader.0:31  %window_buffer_addr_10 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_74

ST_2: line_buffer_1_54_addr [1/1] 0.00ns
.preheader.preheader.0:32  %line_buffer_1_54_addr = getelementptr [16 x i16]* %line_buffer_1_54, i64 0, i64 %tmp

ST_2: line_buffer_1_54_load [2/2] 2.39ns
.preheader.preheader.0:33  %line_buffer_1_54_load = load i16* %line_buffer_1_54_addr, align 2

ST_2: line_buffer_0_54_addr [1/1] 0.00ns
.preheader.preheader.0:36  %line_buffer_0_54_addr = getelementptr [16 x i16]* %line_buffer_0_54, i64 0, i64 %tmp

ST_2: line_buffer_0_54_load [2/2] 2.39ns
.preheader.preheader.0:37  %line_buffer_0_54_load = load i16* %line_buffer_0_54_addr, align 2

ST_2: tmp_104 [1/1] 0.00ns
.preheader.preheader.0:40  %tmp_104 = trunc i5 %d to i4

ST_2: stg_44 [1/1] 1.94ns
.preheader.preheader.0:41  switch i4 %tmp_104, label %branch15 [
    i4 0, label %branch0
    i4 1, label %branch1
    i4 2, label %branch2
    i4 3, label %branch3
    i4 4, label %branch4
    i4 5, label %branch5
    i4 6, label %branch6
    i4 7, label %branch7
    i4 -8, label %branch8
    i4 -7, label %branch9
    i4 -6, label %branch10
    i4 -5, label %branch11
    i4 -4, label %branch12
    i4 -3, label %branch13
    i4 -2, label %branch14
  ]

ST_2: window_buffer_load [2/2] 2.71ns
.preheader.preheader.031:3  %window_buffer_load = load i16* %window_buffer_addr, align 2

ST_2: window_buffer_load_1 [2/2] 2.71ns
.preheader.preheader.031:15  %window_buffer_load_1 = load i16* %window_buffer_addr_10, align 2


 <State 3>: 3.23ns
ST_3: tmp_cast1 [1/1] 0.00ns
.preheader.preheader.0:5  %tmp_cast1 = zext i5 %d to i7

ST_3: tmp_70 [1/1] 1.72ns
.preheader.preheader.0:17  %tmp_70 = add i7 -48, %tmp_cast1

ST_3: line_buffer_1_54_load [1/2] 2.39ns
.preheader.preheader.0:33  %line_buffer_1_54_load = load i16* %line_buffer_1_54_addr, align 2

ST_3: line_buffer_0_54_load [1/2] 2.39ns
.preheader.preheader.0:37  %line_buffer_0_54_load = load i16* %line_buffer_0_54_addr, align 2

ST_3: tmp_120 [1/1] 1.00ns
branch14:0  %tmp_120 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_14_V)

ST_3: stg_52 [1/1] 2.23ns
branch14:1  br label %.preheader.preheader.031

ST_3: tmp_119 [1/1] 1.00ns
branch13:0  %tmp_119 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_13_V)

ST_3: stg_54 [1/1] 2.23ns
branch13:1  br label %.preheader.preheader.031

ST_3: tmp_118 [1/1] 1.00ns
branch12:0  %tmp_118 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_12_V)

ST_3: stg_56 [1/1] 2.23ns
branch12:1  br label %.preheader.preheader.031

ST_3: tmp_117 [1/1] 1.00ns
branch11:0  %tmp_117 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_11_V)

ST_3: stg_58 [1/1] 2.23ns
branch11:1  br label %.preheader.preheader.031

ST_3: tmp_116 [1/1] 1.00ns
branch10:0  %tmp_116 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_10_V)

ST_3: stg_60 [1/1] 2.23ns
branch10:1  br label %.preheader.preheader.031

ST_3: tmp_115 [1/1] 1.00ns
branch9:0  %tmp_115 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_9_V)

ST_3: stg_62 [1/1] 2.23ns
branch9:1  br label %.preheader.preheader.031

ST_3: tmp_114 [1/1] 1.00ns
branch8:0  %tmp_114 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_8_V)

ST_3: stg_64 [1/1] 2.23ns
branch8:1  br label %.preheader.preheader.031

ST_3: tmp_113 [1/1] 1.00ns
branch7:0  %tmp_113 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_7_V)

ST_3: stg_66 [1/1] 2.23ns
branch7:1  br label %.preheader.preheader.031

ST_3: tmp_112 [1/1] 1.00ns
branch6:0  %tmp_112 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_6_V)

ST_3: stg_68 [1/1] 2.23ns
branch6:1  br label %.preheader.preheader.031

ST_3: tmp_111 [1/1] 1.00ns
branch5:0  %tmp_111 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_5_V)

ST_3: stg_70 [1/1] 2.23ns
branch5:1  br label %.preheader.preheader.031

ST_3: tmp_110 [1/1] 1.00ns
branch4:0  %tmp_110 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_4_V)

ST_3: stg_72 [1/1] 2.23ns
branch4:1  br label %.preheader.preheader.031

ST_3: tmp_109 [1/1] 1.00ns
branch3:0  %tmp_109 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_3_V)

ST_3: stg_74 [1/1] 2.23ns
branch3:1  br label %.preheader.preheader.031

ST_3: tmp_108 [1/1] 1.00ns
branch2:0  %tmp_108 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_2_V)

ST_3: stg_76 [1/1] 2.23ns
branch2:1  br label %.preheader.preheader.031

ST_3: tmp_107 [1/1] 1.00ns
branch1:0  %tmp_107 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_1_V)

ST_3: stg_78 [1/1] 2.23ns
branch1:1  br label %.preheader.preheader.031

ST_3: tmp_106 [1/1] 1.00ns
branch0:0  %tmp_106 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_0_V)

ST_3: stg_80 [1/1] 2.23ns
branch0:1  br label %.preheader.preheader.031

ST_3: tmp_105 [1/1] 1.00ns
branch15:0  %tmp_105 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %matrix_e3x3_i_15_V)

ST_3: stg_82 [1/1] 2.23ns
branch15:1  br label %.preheader.preheader.031

ST_3: window_buffer_load [1/2] 2.71ns
.preheader.preheader.031:3  %window_buffer_load = load i16* %window_buffer_addr, align 2

ST_3: window_buffer_load_1 [1/2] 2.71ns
.preheader.preheader.031:15  %window_buffer_load_1 = load i16* %window_buffer_addr_10, align 2


 <State 4>: 2.71ns
ST_4: window_buffer_addr_1 [1/1] 0.00ns
.preheader.preheader.0:9  %window_buffer_addr_1 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp

ST_4: tmp_71_cast [1/1] 0.00ns
.preheader.preheader.0:18  %tmp_71_cast = zext i7 %tmp_70 to i64

ST_4: window_buffer_addr_5 [1/1] 0.00ns
.preheader.preheader.0:19  %window_buffer_addr_5 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_71_cast

ST_4: line_buffer_2_0_addr [1/1] 0.00ns
.preheader.preheader.0:34  %line_buffer_2_0_addr = getelementptr [16 x i16]* %line_buffer_2_0, i64 0, i64 %tmp

ST_4: stg_89 [1/1] 2.39ns
.preheader.preheader.0:35  store i16 %line_buffer_1_54_load, i16* %line_buffer_2_0_addr, align 2

ST_4: line_buffer_1_0_addr [1/1] 0.00ns
.preheader.preheader.0:38  %line_buffer_1_0_addr = getelementptr [16 x i16]* %line_buffer_1_0, i64 0, i64 %tmp

ST_4: stg_91 [1/1] 2.39ns
.preheader.preheader.0:39  store i16 %line_buffer_0_54_load, i16* %line_buffer_1_0_addr, align 2

ST_4: tmp_4 [1/1] 0.00ns
.preheader.preheader.031:0  %tmp_4 = phi i16 [ %tmp_105, %branch15 ], [ %tmp_120, %branch14 ], [ %tmp_119, %branch13 ], [ %tmp_118, %branch12 ], [ %tmp_117, %branch11 ], [ %tmp_116, %branch10 ], [ %tmp_115, %branch9 ], [ %tmp_114, %branch8 ], [ %tmp_113, %branch7 ], [ %tmp_112, %branch6 ], [ %tmp_111, %branch5 ], [ %tmp_110, %branch4 ], [ %tmp_109, %branch3 ], [ %tmp_108, %branch2 ], [ %tmp_107, %branch1 ], [ %tmp_106, %branch0 ]

ST_4: line_buffer_0_0_addr [1/1] 0.00ns
.preheader.preheader.031:1  %line_buffer_0_0_addr = getelementptr [16 x i16]* %line_buffer_0_0, i64 0, i64 %tmp

ST_4: stg_94 [1/1] 2.39ns
.preheader.preheader.031:2  store i16 %tmp_4, i16* %line_buffer_0_0_addr, align 2

ST_4: stg_95 [1/1] 2.71ns
.preheader.preheader.031:5  store i16 %line_buffer_0_54_load, i16* %window_buffer_addr, align 2

ST_4: stg_96 [1/1] 2.71ns
.preheader.preheader.031:9  store i16 %line_buffer_1_54_load, i16* %window_buffer_addr_5, align 2

ST_4: line_buffer_2_54_addr [1/1] 0.00ns
.preheader.preheader.031:10  %line_buffer_2_54_addr = getelementptr [16 x i16]* %line_buffer_2_54, i64 0, i64 %tmp

ST_4: line_buffer_2_54_load [2/2] 2.39ns
.preheader.preheader.031:12  %line_buffer_2_54_load = load i16* %line_buffer_2_54_addr, align 2


 <State 5>: 2.71ns
ST_5: tmp_69_cast1 [1/1] 0.00ns
.preheader.preheader.0:12  %tmp_69_cast1 = sext i5 %tmp_67 to i6

ST_5: tmp_69_cast [1/1] 0.00ns
.preheader.preheader.0:13  %tmp_69_cast = zext i6 %tmp_69_cast1 to i64

ST_5: window_buffer_addr_3 [1/1] 0.00ns
.preheader.preheader.0:14  %window_buffer_addr_3 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_69_cast

ST_5: stg_102 [1/1] 2.71ns
.preheader.preheader.031:4  store i16 %window_buffer_load, i16* %window_buffer_addr_1, align 2

ST_5: stg_103 [1/1] 2.71ns
.preheader.preheader.031:7  store i16 %line_buffer_0_54_load, i16* %window_buffer_addr_3, align 2

ST_5: line_buffer_2_54_load [1/2] 2.39ns
.preheader.preheader.031:12  %line_buffer_2_54_load = load i16* %line_buffer_2_54_addr, align 2


 <State 6>: 2.71ns
ST_6: tmp_68 [1/1] 0.00ns
.preheader.preheader.0:10  %tmp_68 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 1, i5 %d)

ST_6: window_buffer_addr_2 [1/1] 0.00ns
.preheader.preheader.0:11  %window_buffer_addr_2 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_68

ST_6: tmp_69 [1/1] 0.00ns
.preheader.preheader.0:15  %tmp_69 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 2, i5 %d)

ST_6: window_buffer_addr_4 [1/1] 0.00ns
.preheader.preheader.0:16  %window_buffer_addr_4 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_69

ST_6: stg_109 [1/1] 2.71ns
.preheader.preheader.031:6  store i16 %line_buffer_0_54_load, i16* %window_buffer_addr_2, align 2

ST_6: stg_110 [1/1] 2.71ns
.preheader.preheader.031:8  store i16 %line_buffer_1_54_load, i16* %window_buffer_addr_4, align 2


 <State 7>: 2.71ns
ST_7: tmp_cast [1/1] 0.00ns
.preheader.preheader.0:4  %tmp_cast = zext i5 %d to i8

ST_7: tmp_71 [1/1] 0.00ns
.preheader.preheader.0:20  %tmp_71 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 3, i5 %d)

ST_7: window_buffer_addr_6 [1/1] 0.00ns
.preheader.preheader.0:21  %window_buffer_addr_6 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_71

ST_7: tmp_72 [1/1] 0.00ns
.preheader.preheader.0:25  %tmp_72 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 4, i5 %d)

ST_7: window_buffer_addr_8 [1/1] 0.00ns
.preheader.preheader.0:26  %window_buffer_addr_8 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_72

ST_7: tmp_73 [1/1] 1.72ns
.preheader.preheader.0:27  %tmp_73 = add i8 -112, %tmp_cast

ST_7: stg_117 [1/1] 2.71ns
.preheader.preheader.031:11  store i16 %line_buffer_1_54_load, i16* %window_buffer_addr_6, align 2

ST_7: stg_118 [1/1] 2.71ns
.preheader.preheader.031:14  store i16 %line_buffer_2_54_load, i16* %window_buffer_addr_8, align 2


 <State 8>: 2.71ns
ST_8: tmp_75_cast [1/1] 0.00ns
.preheader.preheader.0:28  %tmp_75_cast = zext i8 %tmp_73 to i64

ST_8: window_buffer_addr_9 [1/1] 0.00ns
.preheader.preheader.0:29  %window_buffer_addr_9 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_75_cast

ST_8: stg_121 [1/1] 2.71ns
.preheader.preheader.031:16  store i16 %window_buffer_load_1, i16* %window_buffer_addr_9, align 2

ST_8: stg_122 [1/1] 2.71ns
.preheader.preheader.031:17  store i16 %line_buffer_2_54_load, i16* %window_buffer_addr_10, align 2


 <State 9>: 0.00ns

 <State 10>: 2.71ns
ST_10: empty_579 [1/1] 0.00ns
.preheader.preheader.0:0  %empty_579 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_10: tmp_s [1/1] 0.00ns
.preheader.preheader.0:1  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str15)

ST_10: stg_125 [1/1] 0.00ns
.preheader.preheader.0:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind

ST_10: tmp_73_cast1 [1/1] 0.00ns
.preheader.preheader.0:22  %tmp_73_cast1 = sext i5 %tmp_67 to i7

ST_10: tmp_73_cast [1/1] 0.00ns
.preheader.preheader.0:23  %tmp_73_cast = zext i7 %tmp_73_cast1 to i64

ST_10: window_buffer_addr_7 [1/1] 0.00ns
.preheader.preheader.0:24  %window_buffer_addr_7 = getelementptr [144 x i16]* %window_buffer, i64 0, i64 %tmp_73_cast

ST_10: stg_129 [1/1] 2.71ns
.preheader.preheader.031:13  store i16 %line_buffer_2_54_load, i16* %window_buffer_addr_7, align 2

ST_10: empty_580 [1/1] 0.00ns
.preheader.preheader.031:18  %empty_580 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str15, i32 %tmp_s)

ST_10: stg_131 [1/1] 0.00ns
.preheader.preheader.031:19  br label %1


 <State 11>: 0.00ns
ST_11: stg_132 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
