// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _fire2_expand1x1_HH_
#define _fire2_expand1x1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct fire2_expand1x1 : public sc_module {
    // Port declarations 55
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > matrix_e1x1_i_0_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_0_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_0_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_1_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_1_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_1_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_2_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_2_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_2_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_3_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_3_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_3_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_4_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_4_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_4_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_5_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_5_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_5_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_6_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_6_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_6_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_7_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_7_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_7_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_8_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_8_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_8_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_9_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_9_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_9_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_10_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_10_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_10_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_11_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_11_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_11_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_12_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_12_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_12_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_13_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_13_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_13_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_14_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_14_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_14_V_read;
    sc_in< sc_lv<32> > matrix_e1x1_i_15_V_dout;
    sc_in< sc_logic > matrix_e1x1_i_15_V_empty_n;
    sc_out< sc_logic > matrix_e1x1_i_15_V_read;


    // Module declarations
    fire2_expand1x1(sc_module_name name);
    SC_HAS_PROCESS(fire2_expand1x1);

    ~fire2_expand1x1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<6> > r_1_fu_237_p2;
    sc_signal< sc_lv<6> > r_1_reg_274;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_101;
    sc_signal< sc_lv<6> > c_1_fu_249_p2;
    sc_signal< sc_lv<6> > c_1_reg_282;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_110;
    sc_signal< sc_lv<5> > d_4_fu_261_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_119;
    sc_signal< sc_lv<1> > exitcond2_fu_255_p2;
    sc_signal< sc_lv<4> > tmp_122_fu_267_p1;
    sc_signal< bool > ap_sig_bdd_247;
    sc_signal< sc_lv<6> > r_reg_198;
    sc_signal< sc_lv<1> > exitcond3_fu_243_p2;
    sc_signal< bool > ap_sig_bdd_260;
    sc_signal< sc_lv<6> > c_reg_209;
    sc_signal< sc_lv<1> > exitcond4_fu_231_p2;
    sc_signal< sc_lv<5> > d_reg_220;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_37;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_101();
    void thread_ap_sig_bdd_110();
    void thread_ap_sig_bdd_119();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_247();
    void thread_ap_sig_bdd_260();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_c_1_fu_249_p2();
    void thread_d_4_fu_261_p2();
    void thread_exitcond2_fu_255_p2();
    void thread_exitcond3_fu_243_p2();
    void thread_exitcond4_fu_231_p2();
    void thread_matrix_e1x1_i_0_V_read();
    void thread_matrix_e1x1_i_10_V_read();
    void thread_matrix_e1x1_i_11_V_read();
    void thread_matrix_e1x1_i_12_V_read();
    void thread_matrix_e1x1_i_13_V_read();
    void thread_matrix_e1x1_i_14_V_read();
    void thread_matrix_e1x1_i_15_V_read();
    void thread_matrix_e1x1_i_1_V_read();
    void thread_matrix_e1x1_i_2_V_read();
    void thread_matrix_e1x1_i_3_V_read();
    void thread_matrix_e1x1_i_4_V_read();
    void thread_matrix_e1x1_i_5_V_read();
    void thread_matrix_e1x1_i_6_V_read();
    void thread_matrix_e1x1_i_7_V_read();
    void thread_matrix_e1x1_i_8_V_read();
    void thread_matrix_e1x1_i_9_V_read();
    void thread_r_1_fu_237_p2();
    void thread_tmp_122_fu_267_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
