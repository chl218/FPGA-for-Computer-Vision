-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fire2_copy is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mat_i_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_0_V_empty_n : IN STD_LOGIC;
    mat_i_0_V_read : OUT STD_LOGIC;
    mat_i_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_1_V_empty_n : IN STD_LOGIC;
    mat_i_1_V_read : OUT STD_LOGIC;
    mat_i_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_2_V_empty_n : IN STD_LOGIC;
    mat_i_2_V_read : OUT STD_LOGIC;
    mat_i_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_3_V_empty_n : IN STD_LOGIC;
    mat_i_3_V_read : OUT STD_LOGIC;
    mat_i_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_4_V_empty_n : IN STD_LOGIC;
    mat_i_4_V_read : OUT STD_LOGIC;
    mat_i_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_5_V_empty_n : IN STD_LOGIC;
    mat_i_5_V_read : OUT STD_LOGIC;
    mat_i_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_6_V_empty_n : IN STD_LOGIC;
    mat_i_6_V_read : OUT STD_LOGIC;
    mat_i_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_7_V_empty_n : IN STD_LOGIC;
    mat_i_7_V_read : OUT STD_LOGIC;
    mat_i_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_8_V_empty_n : IN STD_LOGIC;
    mat_i_8_V_read : OUT STD_LOGIC;
    mat_i_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_9_V_empty_n : IN STD_LOGIC;
    mat_i_9_V_read : OUT STD_LOGIC;
    mat_i_10_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_10_V_empty_n : IN STD_LOGIC;
    mat_i_10_V_read : OUT STD_LOGIC;
    mat_i_11_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_11_V_empty_n : IN STD_LOGIC;
    mat_i_11_V_read : OUT STD_LOGIC;
    mat_i_12_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_12_V_empty_n : IN STD_LOGIC;
    mat_i_12_V_read : OUT STD_LOGIC;
    mat_i_13_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_13_V_empty_n : IN STD_LOGIC;
    mat_i_13_V_read : OUT STD_LOGIC;
    mat_i_14_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_14_V_empty_n : IN STD_LOGIC;
    mat_i_14_V_read : OUT STD_LOGIC;
    mat_i_15_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    mat_i_15_V_empty_n : IN STD_LOGIC;
    mat_i_15_V_read : OUT STD_LOGIC;
    mat1_o_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_0_V_full_n : IN STD_LOGIC;
    mat1_o_0_V_write : OUT STD_LOGIC;
    mat1_o_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_1_V_full_n : IN STD_LOGIC;
    mat1_o_1_V_write : OUT STD_LOGIC;
    mat1_o_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_2_V_full_n : IN STD_LOGIC;
    mat1_o_2_V_write : OUT STD_LOGIC;
    mat1_o_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_3_V_full_n : IN STD_LOGIC;
    mat1_o_3_V_write : OUT STD_LOGIC;
    mat1_o_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_4_V_full_n : IN STD_LOGIC;
    mat1_o_4_V_write : OUT STD_LOGIC;
    mat1_o_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_5_V_full_n : IN STD_LOGIC;
    mat1_o_5_V_write : OUT STD_LOGIC;
    mat1_o_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_6_V_full_n : IN STD_LOGIC;
    mat1_o_6_V_write : OUT STD_LOGIC;
    mat1_o_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_7_V_full_n : IN STD_LOGIC;
    mat1_o_7_V_write : OUT STD_LOGIC;
    mat1_o_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_8_V_full_n : IN STD_LOGIC;
    mat1_o_8_V_write : OUT STD_LOGIC;
    mat1_o_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_9_V_full_n : IN STD_LOGIC;
    mat1_o_9_V_write : OUT STD_LOGIC;
    mat1_o_10_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_10_V_full_n : IN STD_LOGIC;
    mat1_o_10_V_write : OUT STD_LOGIC;
    mat1_o_11_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_11_V_full_n : IN STD_LOGIC;
    mat1_o_11_V_write : OUT STD_LOGIC;
    mat1_o_12_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_12_V_full_n : IN STD_LOGIC;
    mat1_o_12_V_write : OUT STD_LOGIC;
    mat1_o_13_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_13_V_full_n : IN STD_LOGIC;
    mat1_o_13_V_write : OUT STD_LOGIC;
    mat1_o_14_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_14_V_full_n : IN STD_LOGIC;
    mat1_o_14_V_write : OUT STD_LOGIC;
    mat1_o_15_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat1_o_15_V_full_n : IN STD_LOGIC;
    mat1_o_15_V_write : OUT STD_LOGIC;
    mat2_o_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_0_V_full_n : IN STD_LOGIC;
    mat2_o_0_V_write : OUT STD_LOGIC;
    mat2_o_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_1_V_full_n : IN STD_LOGIC;
    mat2_o_1_V_write : OUT STD_LOGIC;
    mat2_o_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_2_V_full_n : IN STD_LOGIC;
    mat2_o_2_V_write : OUT STD_LOGIC;
    mat2_o_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_3_V_full_n : IN STD_LOGIC;
    mat2_o_3_V_write : OUT STD_LOGIC;
    mat2_o_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_4_V_full_n : IN STD_LOGIC;
    mat2_o_4_V_write : OUT STD_LOGIC;
    mat2_o_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_5_V_full_n : IN STD_LOGIC;
    mat2_o_5_V_write : OUT STD_LOGIC;
    mat2_o_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_6_V_full_n : IN STD_LOGIC;
    mat2_o_6_V_write : OUT STD_LOGIC;
    mat2_o_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_7_V_full_n : IN STD_LOGIC;
    mat2_o_7_V_write : OUT STD_LOGIC;
    mat2_o_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_8_V_full_n : IN STD_LOGIC;
    mat2_o_8_V_write : OUT STD_LOGIC;
    mat2_o_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_9_V_full_n : IN STD_LOGIC;
    mat2_o_9_V_write : OUT STD_LOGIC;
    mat2_o_10_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_10_V_full_n : IN STD_LOGIC;
    mat2_o_10_V_write : OUT STD_LOGIC;
    mat2_o_11_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_11_V_full_n : IN STD_LOGIC;
    mat2_o_11_V_write : OUT STD_LOGIC;
    mat2_o_12_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_12_V_full_n : IN STD_LOGIC;
    mat2_o_12_V_write : OUT STD_LOGIC;
    mat2_o_13_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_13_V_full_n : IN STD_LOGIC;
    mat2_o_13_V_write : OUT STD_LOGIC;
    mat2_o_14_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_14_V_full_n : IN STD_LOGIC;
    mat2_o_14_V_write : OUT STD_LOGIC;
    mat2_o_15_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    mat2_o_15_V_full_n : IN STD_LOGIC;
    mat2_o_15_V_write : OUT STD_LOGIC );
end;


architecture behav of fire2_copy is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st4_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_BD1 : STD_LOGIC_VECTOR (11 downto 0) := "101111010001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal indvar_flatten_reg_868 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_flatten_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_230 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_379 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal indvar_flatten_next_fu_885_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_392 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_483 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond_flatten_fu_879_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_392))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (exitcond_flatten_fu_879_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_392)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond_flatten_fu_879_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- indvar_flatten_reg_868 assign process. --
    indvar_flatten_reg_868_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (exitcond_flatten_fu_879_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_868 <= indvar_flatten_next_fu_885_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_392))) then 
                indvar_flatten_reg_868 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                exitcond_flatten_reg_891 <= exitcond_flatten_fu_879_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond_flatten_fu_879_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1, ap_sig_bdd_392)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_392)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond_flatten_fu_879_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond_flatten_fu_879_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st4_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st4_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st4_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_230 assign process. --
    ap_sig_bdd_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_230 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_379 assign process. --
    ap_sig_bdd_379_assign_proc : process(mat_i_0_V_empty_n, mat_i_1_V_empty_n, mat_i_2_V_empty_n, mat_i_3_V_empty_n, mat_i_4_V_empty_n, mat_i_5_V_empty_n, mat_i_6_V_empty_n, mat_i_7_V_empty_n, mat_i_8_V_empty_n, mat_i_9_V_empty_n, mat_i_10_V_empty_n, mat_i_11_V_empty_n, mat_i_12_V_empty_n, mat_i_13_V_empty_n, mat_i_14_V_empty_n, mat_i_15_V_empty_n, mat1_o_0_V_full_n, mat1_o_1_V_full_n, mat1_o_2_V_full_n, mat1_o_3_V_full_n, mat1_o_4_V_full_n, mat1_o_5_V_full_n, mat1_o_6_V_full_n, mat1_o_7_V_full_n, mat1_o_8_V_full_n, mat1_o_9_V_full_n, mat1_o_10_V_full_n, mat1_o_11_V_full_n, mat1_o_12_V_full_n, mat1_o_13_V_full_n, mat1_o_14_V_full_n, mat1_o_15_V_full_n, mat2_o_0_V_full_n, mat2_o_1_V_full_n, mat2_o_2_V_full_n, mat2_o_3_V_full_n, mat2_o_4_V_full_n, mat2_o_5_V_full_n, mat2_o_6_V_full_n, mat2_o_7_V_full_n, mat2_o_8_V_full_n, mat2_o_9_V_full_n, mat2_o_10_V_full_n, mat2_o_11_V_full_n, mat2_o_12_V_full_n, mat2_o_13_V_full_n, mat2_o_14_V_full_n, mat2_o_15_V_full_n, exitcond_flatten_reg_891)
    begin
                ap_sig_bdd_379 <= (((mat_i_0_V_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_891 = ap_const_lv1_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_0_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_0_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_1_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_1_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_1_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_2_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_2_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_2_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_3_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_3_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_3_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_4_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_4_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_4_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_5_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_5_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_5_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_6_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_6_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_6_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_7_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_7_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_7_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_8_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_8_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_8_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_9_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_9_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_9_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_10_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_10_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_10_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_11_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_11_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_11_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_12_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_12_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_12_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_13_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_13_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_13_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_14_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_14_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_14_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat_i_15_V_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat1_o_15_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_891 = ap_const_lv1_0) and (mat2_o_15_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_392 assign process. --
    ap_sig_bdd_392_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_392 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_483 assign process. --
    ap_sig_bdd_483_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_483 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_230)
    begin
        if (ap_sig_bdd_230) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_2 assign process. --
    ap_sig_cseq_ST_st4_fsm_2_assign_proc : process(ap_sig_bdd_483)
    begin
        if (ap_sig_bdd_483) then 
            ap_sig_cseq_ST_st4_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_879_p2 <= "1" when (indvar_flatten_reg_868 = ap_const_lv12_BD1) else "0";
    indvar_flatten_next_fu_885_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_868) + unsigned(ap_const_lv12_1));
    mat1_o_0_V_din <= mat_i_0_V_dout;

    -- mat1_o_0_V_write assign process. --
    mat1_o_0_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_0_V_write <= ap_const_logic_1;
        else 
            mat1_o_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_10_V_din <= mat_i_10_V_dout;

    -- mat1_o_10_V_write assign process. --
    mat1_o_10_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_10_V_write <= ap_const_logic_1;
        else 
            mat1_o_10_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_11_V_din <= mat_i_11_V_dout;

    -- mat1_o_11_V_write assign process. --
    mat1_o_11_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_11_V_write <= ap_const_logic_1;
        else 
            mat1_o_11_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_12_V_din <= mat_i_12_V_dout;

    -- mat1_o_12_V_write assign process. --
    mat1_o_12_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_12_V_write <= ap_const_logic_1;
        else 
            mat1_o_12_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_13_V_din <= mat_i_13_V_dout;

    -- mat1_o_13_V_write assign process. --
    mat1_o_13_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_13_V_write <= ap_const_logic_1;
        else 
            mat1_o_13_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_14_V_din <= mat_i_14_V_dout;

    -- mat1_o_14_V_write assign process. --
    mat1_o_14_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_14_V_write <= ap_const_logic_1;
        else 
            mat1_o_14_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_15_V_din <= mat_i_15_V_dout;

    -- mat1_o_15_V_write assign process. --
    mat1_o_15_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_15_V_write <= ap_const_logic_1;
        else 
            mat1_o_15_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_1_V_din <= mat_i_1_V_dout;

    -- mat1_o_1_V_write assign process. --
    mat1_o_1_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_1_V_write <= ap_const_logic_1;
        else 
            mat1_o_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_2_V_din <= mat_i_2_V_dout;

    -- mat1_o_2_V_write assign process. --
    mat1_o_2_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_2_V_write <= ap_const_logic_1;
        else 
            mat1_o_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_3_V_din <= mat_i_3_V_dout;

    -- mat1_o_3_V_write assign process. --
    mat1_o_3_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_3_V_write <= ap_const_logic_1;
        else 
            mat1_o_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_4_V_din <= mat_i_4_V_dout;

    -- mat1_o_4_V_write assign process. --
    mat1_o_4_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_4_V_write <= ap_const_logic_1;
        else 
            mat1_o_4_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_5_V_din <= mat_i_5_V_dout;

    -- mat1_o_5_V_write assign process. --
    mat1_o_5_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_5_V_write <= ap_const_logic_1;
        else 
            mat1_o_5_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_6_V_din <= mat_i_6_V_dout;

    -- mat1_o_6_V_write assign process. --
    mat1_o_6_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_6_V_write <= ap_const_logic_1;
        else 
            mat1_o_6_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_7_V_din <= mat_i_7_V_dout;

    -- mat1_o_7_V_write assign process. --
    mat1_o_7_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_7_V_write <= ap_const_logic_1;
        else 
            mat1_o_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_8_V_din <= mat_i_8_V_dout;

    -- mat1_o_8_V_write assign process. --
    mat1_o_8_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_8_V_write <= ap_const_logic_1;
        else 
            mat1_o_8_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat1_o_9_V_din <= mat_i_9_V_dout;

    -- mat1_o_9_V_write assign process. --
    mat1_o_9_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat1_o_9_V_write <= ap_const_logic_1;
        else 
            mat1_o_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_0_V_din <= mat_i_0_V_dout;

    -- mat2_o_0_V_write assign process. --
    mat2_o_0_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_0_V_write <= ap_const_logic_1;
        else 
            mat2_o_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_10_V_din <= mat_i_10_V_dout;

    -- mat2_o_10_V_write assign process. --
    mat2_o_10_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_10_V_write <= ap_const_logic_1;
        else 
            mat2_o_10_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_11_V_din <= mat_i_11_V_dout;

    -- mat2_o_11_V_write assign process. --
    mat2_o_11_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_11_V_write <= ap_const_logic_1;
        else 
            mat2_o_11_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_12_V_din <= mat_i_12_V_dout;

    -- mat2_o_12_V_write assign process. --
    mat2_o_12_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_12_V_write <= ap_const_logic_1;
        else 
            mat2_o_12_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_13_V_din <= mat_i_13_V_dout;

    -- mat2_o_13_V_write assign process. --
    mat2_o_13_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_13_V_write <= ap_const_logic_1;
        else 
            mat2_o_13_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_14_V_din <= mat_i_14_V_dout;

    -- mat2_o_14_V_write assign process. --
    mat2_o_14_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_14_V_write <= ap_const_logic_1;
        else 
            mat2_o_14_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_15_V_din <= mat_i_15_V_dout;

    -- mat2_o_15_V_write assign process. --
    mat2_o_15_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_15_V_write <= ap_const_logic_1;
        else 
            mat2_o_15_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_1_V_din <= mat_i_1_V_dout;

    -- mat2_o_1_V_write assign process. --
    mat2_o_1_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_1_V_write <= ap_const_logic_1;
        else 
            mat2_o_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_2_V_din <= mat_i_2_V_dout;

    -- mat2_o_2_V_write assign process. --
    mat2_o_2_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_2_V_write <= ap_const_logic_1;
        else 
            mat2_o_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_3_V_din <= mat_i_3_V_dout;

    -- mat2_o_3_V_write assign process. --
    mat2_o_3_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_3_V_write <= ap_const_logic_1;
        else 
            mat2_o_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_4_V_din <= mat_i_4_V_dout;

    -- mat2_o_4_V_write assign process. --
    mat2_o_4_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_4_V_write <= ap_const_logic_1;
        else 
            mat2_o_4_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_5_V_din <= mat_i_5_V_dout;

    -- mat2_o_5_V_write assign process. --
    mat2_o_5_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_5_V_write <= ap_const_logic_1;
        else 
            mat2_o_5_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_6_V_din <= mat_i_6_V_dout;

    -- mat2_o_6_V_write assign process. --
    mat2_o_6_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_6_V_write <= ap_const_logic_1;
        else 
            mat2_o_6_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_7_V_din <= mat_i_7_V_dout;

    -- mat2_o_7_V_write assign process. --
    mat2_o_7_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_7_V_write <= ap_const_logic_1;
        else 
            mat2_o_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_8_V_din <= mat_i_8_V_dout;

    -- mat2_o_8_V_write assign process. --
    mat2_o_8_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_8_V_write <= ap_const_logic_1;
        else 
            mat2_o_8_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mat2_o_9_V_din <= mat_i_9_V_dout;

    -- mat2_o_9_V_write assign process. --
    mat2_o_9_V_write_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat2_o_9_V_write <= ap_const_logic_1;
        else 
            mat2_o_9_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_0_V_read assign process. --
    mat_i_0_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_0_V_read <= ap_const_logic_1;
        else 
            mat_i_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_10_V_read assign process. --
    mat_i_10_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_10_V_read <= ap_const_logic_1;
        else 
            mat_i_10_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_11_V_read assign process. --
    mat_i_11_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_11_V_read <= ap_const_logic_1;
        else 
            mat_i_11_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_12_V_read assign process. --
    mat_i_12_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_12_V_read <= ap_const_logic_1;
        else 
            mat_i_12_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_13_V_read assign process. --
    mat_i_13_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_13_V_read <= ap_const_logic_1;
        else 
            mat_i_13_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_14_V_read assign process. --
    mat_i_14_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_14_V_read <= ap_const_logic_1;
        else 
            mat_i_14_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_15_V_read assign process. --
    mat_i_15_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_15_V_read <= ap_const_logic_1;
        else 
            mat_i_15_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_1_V_read assign process. --
    mat_i_1_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_1_V_read <= ap_const_logic_1;
        else 
            mat_i_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_2_V_read assign process. --
    mat_i_2_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_2_V_read <= ap_const_logic_1;
        else 
            mat_i_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_3_V_read assign process. --
    mat_i_3_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_3_V_read <= ap_const_logic_1;
        else 
            mat_i_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_4_V_read assign process. --
    mat_i_4_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_4_V_read <= ap_const_logic_1;
        else 
            mat_i_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_5_V_read assign process. --
    mat_i_5_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_5_V_read <= ap_const_logic_1;
        else 
            mat_i_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_6_V_read assign process. --
    mat_i_6_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_6_V_read <= ap_const_logic_1;
        else 
            mat_i_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_7_V_read assign process. --
    mat_i_7_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_7_V_read <= ap_const_logic_1;
        else 
            mat_i_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_8_V_read assign process. --
    mat_i_8_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_8_V_read <= ap_const_logic_1;
        else 
            mat_i_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- mat_i_9_V_read assign process. --
    mat_i_9_V_read_assign_proc : process(exitcond_flatten_reg_891, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_379, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_reg_891 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_379 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            mat_i_9_V_read <= ap_const_logic_1;
        else 
            mat_i_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
